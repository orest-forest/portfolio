{"version":3,"sources":["logo.svg","components/clock.js","components/ShowMonth.js","components/backgound-image.js","components/NameInput.js","components/showWeather.js","components/Weather.js","components/Quote.js","components/App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","Date","date","setDate","useEffect","timerId","setInterval","clearInterval","className","toLocaleTimeString","ShowMonth","month","getMonth","dayOfMonth","getDate","dayOfWeek","getDay","Background","background","setBackground","undefined","greeting","setGreeting","today","hour","getHours","Math","floor","random","document","body","style","backgroundImage","NameInput","localStorage","nameHash","name","setName","inputRef","useRef","onSubmit","evt","preventDefault","current","blur","length","type","value","onChange","e","target","onBlur","ref","ShowWeather","props","Object","keys","cod","temperature","main","temp","weather","description","icon","urlIcon","src","Weather","cityHash","city","setCity","cityInfo","setCityInfo","a","fetch","api_url","json","data","console","log","submitCity","handleChange","defaultValue","onClick","Quote","quote","setQuote","newQuoteResponding","setNewQuote","res","text","author","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35895535.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component, useState, useEffect} from \"react\";\r\n\r\nfunction Clock() {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        let timerId = setInterval(() => tick(), 1000)\r\n        return function cleanup() {\r\n            clearInterval(timerId)\r\n        }\r\n    });\r\n\r\n    function tick() {\r\n        setDate(new Date());\r\n    }\r\n\r\n\r\n    return <time className=\"time\">\r\n        {date.toLocaleTimeString()}\r\n    </time>\r\n}\r\n\r\nexport default Clock","import React, {Component, useState, useEffect} from \"react\";\r\n\r\nfunction ShowMonth() {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    let monthName = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октябрь', 'Ноября', 'Декабря'];\r\n    let dayOfWeekName = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\n    let month = date.getMonth();\r\n    let dayOfMonth = date.getDate();\r\n    let dayOfWeek = dayOfWeekName[date.getDay()];\r\n\r\n    return <time className=\"month\">\r\n        {dayOfWeek} {dayOfMonth} {monthName[month]}\r\n    </time>\r\n}\r\n\r\nexport default ShowMonth","import React, {Component, useState, useEffect} from \"react\";\r\n\r\n\r\nfunction Background() {\r\n    const [background, setBackground] = useState(0);\r\n    const [greeting, setGreeting] = useState(undefined);\r\n    const [today, setToday] = useState(new Date);\r\n\r\n    useEffect(() => {\r\n        let hour = today.getHours();\r\n        if (hour > 6 && hour < 12) {\r\n            setBackground(`assets/images/morning/${Math.floor(Math.random() * Math.floor(20)) + 1}.jpg`);\r\n            setGreeting('Доброе утро, ');\r\n\r\n        } else if (hour > 11 && hour < 18) {\r\n            setBackground(`assets/images/day/${Math.floor(Math.random() * Math.floor(20)) + 1}.jpg`);\r\n            setGreeting('Добрый день, ');\r\n        }\r\n\r\n        else if (hour > 17 && hour < 22) {\r\n            setBackground(`assets/images/evening/${Math.floor(Math.random() * Math.floor(20)) + 1}.jpg`);\r\n            setGreeting('Добрый вечер, ');\r\n        }\r\n        else {\r\n            setBackground(`assets/images/night/${Math.floor(Math.random() * Math.floor(20)) + 1}.jpg)`);\r\n            setGreeting('Доброй ночи, ');\r\n        }\r\n    }, [today]);\r\n\r\n\r\n    document.body.style.backgroundImage = 'url(' + background + ')';\r\n\r\n    return <>\r\n        <h2>{greeting}</h2>\r\n    </>\r\n\r\n\r\n}\r\n\r\nexport default Background;","import React, {Component, useState, useEffect, useRef} from \"react\";\r\n\r\nfunction NameInput() {\r\n\r\n    const [name, setName] = useState(localStorage.nameHash);\r\n    const [focus, setFocus] = useState(false);\r\n    const inputRef = useRef(null);\r\n\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        inputRef.current.blur();\r\n        if (name.length == 0) {\r\n            localStorage.name = 'Введите ваше имя';\r\n            return setName('Введите ваше имя')\r\n        }\r\n        localStorage.nameHash = name\r\n    };\r\n\r\n    const twoCalls = e => {\r\n        setName(e.target.value);\r\n        localStorage.nameHash = e.target.value;\r\n    };\r\n\r\n    const checkName = () => {\r\n        if (name.length == 0) {\r\n            localStorage.nameHash = 'Введите ваше имя';\r\n            return setName('Введите ваше имя')\r\n        }\r\n    };\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        < input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={twoCalls}\r\n            onBlur={checkName}\r\n            ref={inputRef}\r\n        />\r\n    </form>\r\n\r\n}\r\n\r\n\r\nexport default NameInput","import React, {Component, useState, useEffect} from \"react\";\r\n\r\nconst ShowWeather = props => {\r\n    if (Object.keys(props).length == 0 || props.cod == 404) {\r\n        return <h4 className=\"weather-error\">Такой город не был найден</h4>\r\n    } else {\r\n        const name = props.name;\r\n        const temperature = props.main.temp;\r\n        const weather = props.weather[0].description;\r\n        const icon = props.weather[0].icon;\r\n\r\n\r\n        const urlIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n        return <div className=\"show-weather-wrapper\">\r\n            <img src={urlIcon} className=\"weather-icon\"/>\r\n            <h2>{name}</h2>\r\n            <h3>{temperature}°C</h3>\r\n            <h4>{weather}</h4>\r\n        </div>\r\n    }\r\n};\r\n\r\nexport default ShowWeather","import React, {Component, useState, useEffect} from \"react\";\r\nimport ShowWeather from './showWeather.js'\r\n\r\nfunction Weather() {\r\n\r\n    const [city, setCity] = useState(localStorage.cityHash);\r\n    const [cityInfo, setCityInfo] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let api_key = 'c35684ca22b136eac156e9ea6d05997e';\r\n            if (city) {\r\n\r\n                const api_url = await\r\n                    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}&units=metric`);\r\n                const data = await api_url.json();\r\n                setCityInfo(data);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n\r\n    }, [city]);\r\n\r\n    const submitCity = (e) => {\r\n        e.preventDefault();\r\n        setCity(localStorage.cityHash)\r\n    };\r\n\r\n    const handleChange = (evt) => {\r\n        localStorage.cityHash = evt.target.value\r\n    };\r\n\r\n    const showWeather = () => {\r\n        if (cityInfo == null) {\r\n            return null\r\n        } else {\r\n            return <p>{Object.keys(cityInfo.name)}</p>\r\n        }\r\n    };\r\n\r\n    if (city == undefined && cityInfo == null) {\r\n        return <form\r\n            onSubmit={submitCity}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                defaultValue='Введите ваш город'\r\n            />\r\n            <button  className=\"weather-button\" onClick={submitCity}>Узнать погоду</button>\r\n        </form>\r\n\r\n    } else {\r\n        return <div>\r\n            <div>\r\n                <ShowWeather {...cityInfo} />\r\n            </div>\r\n            <form onSubmit={submitCity}>\r\n                <input className=\"weather-input\"\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button className=\"weather-button\"\r\n                    onClick={submitCity}>Узнать погоду</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Weather","import React, {Component, useState, useEffect} from \"react\";\r\n\r\nfunction Quote() {\r\n\r\n    const [quote, setQuote] = useState(null);\r\n    const [newQuoteResponding, setNewQuote] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        let apiKey = 'https://type.fit/api/quotes';\r\n        const res = await fetch(apiKey);\r\n        const data = await res.json();\r\n        console.log(data[Math.floor(Math.random() * Math.floor(data.length))]);\r\n        let quoteObj = data[Math.floor(Math.random() * Math.floor(data.length))]\r\n        setQuote(data[Math.floor(Math.random() * Math.floor(data.length))])\r\n    }, [newQuoteResponding]);\r\n\r\n    const newQuote = () => {\r\n        setNewQuote(!newQuoteResponding)\r\n    };\r\n\r\n\r\n    console.log('render quote')\r\n    if (quote == null) {\r\n        return null\r\n    } else {\r\n        return <div className=\"quote-wrapper\">\r\n            <h4>{quote.text}</h4>\r\n            <h3>{quote.author}</h3>\r\n            <button className=\"quote-button\" onClick={newQuote}>Получить новую цитату</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Quote","import logo from '../logo.svg';\r\nimport '../App.css';\r\nimport Clock from './clock.js'\r\nimport ShowMonth from './ShowMonth.js'\r\nimport Background from './backgound-image.js'\r\nimport NameInput from  './NameInput.js'\r\nimport Weather from './Weather.js'\r\nimport Quote from './Quote.js'\r\n\r\nfunction App() {\r\n  return <div className=\"app\">\r\n      <Clock />\r\n      <ShowMonth />\r\n      <Background />\r\n      <NameInput />\r\n      <Weather />\r\n      <Quote />\r\n  </div>\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}